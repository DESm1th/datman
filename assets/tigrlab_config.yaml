### configuration of all run.sh scripts in TIGR lab server
---
### Projects is a dictionary of all the projects that we are current on the server
## The keys are the project name
## The values are the location of the project in the filesystem
## <DATMAN_PROJECTSDIR> is a reference to the DATMAN_PROJECTSDIR path given in the
##  SystemSettings Section below
Projects:
  ANDT:     '<DATMAN_PROJECTSDIR>/ANDT'
  ASDD:     '<DATMAN_PROJECTSDIR>/ASDD'
  COGBDO:   '<DATMAN_PROJECTSDIR>/COGBDO'
  COGBDY:   '<DATMAN_PROJECTSDIR>/COGBDY'
  DBDC:     '<DATMAN_PROJECTSDIR>/DBDC'
  DTI_CMH:  '<DATMAN_PROJECTSDIR>/DTI/CMH'
  PACTMD:   '<DATMAN_PROJECTSDIR>/PACTMD'
  PRELAPSE: '<DATMAN_PROJECTSDIR>/PRELAPSE'
  PNSC:     '<DATMAN_PROJECTSDIR>/PNSC'
  RTMSWM:   '<DATMAN_PROJECTSDIR>/RTMSWM'
  STOPPD:   '<DATMAN_PROJECTSDIR>/STOPPD'
  SPINS:    '<DATMAN_PROJECTSDIR>/SPINS'
  VIPR:     '<DATMAN_PROJECTSDIR>/VIPR'
  PASD:     '<DATMAN_PROJECTSDIR>/PASD'
  PASD01:   '<DATMAN_PROJECTSDIR>/PASD01'

### the SystemsSettings is hold paths specific you your system
### as well as information for loading software packages
## Keys:
## The first (optional level is a knickname for the system
## (if your running datman) on multiple computer systems.
## If you are not using multiple systems, this level can be omitted
##
## The next level is has 5 sections:
##  hostname : a pattern common to the hostnames of all computers on the system
##  DATMAN_PROJECTSDIR: the path to the top level of your data structure
##                      this will be substituted for <DATMAN_PROJECTSDIR>
##                      in the path Projects list above
##  DATMAN_ASSETSDIR:   the location of the "assets" directory that comes with the datman package
##  XNAT_ARCHIVEDIR:    the path to the XNAT archive
##  to_load_quarantine: any envoroment bash command that needs to be run before
##                      any software can be loaded in a new shell
##                      (example: 'source /etc/profile or module load quarantine')
##
##  Software:           A dictionary of specific software loading commands
##
##    Each key is the knickname of a software packages that one or more steps
##    in the processing pipeline rely's on.
##    These should match the "dependancies" field in the PipelineSettings given below
##    For each software package you can specify a:
##       module: the system has a 'module' software system,
##               the module to load in order to use this software package
##               (For more information of module systems see: http://modules.sourceforge.net/)
##       bash_cmd: if you are not using a module system,
##                 but, instead have some shell scripts or commands that should
##                 be run in order to load a software enviroment, they can be given here
##                 (example: 'source ${HOME}/freesurfer_env.sh')
SystemSettings:
  kimel:
    hostname: 'camhres.ca'
    DATMAN_PROJECTSDIR: '/archive/data-2.0'
    DATMAN_ASSETSDIR: '/archive/data-2.0/code/datman/assets'
    XNAT_ARCHIVEDIR: '/mnt/xnat/spred/archive'
    to_load_quarantine: 'module load SGE-extras'
    PipelineSettings_torun: ['data']
    Software:
      AFNI:       {module: AFNI/2014.12.16, bash_cmd: null}
      freesurfer: {module: freesurfer/5.3.0, bash_cmd: null}
      FSL:        {module: FSL/5.0.7, bash_cmd: null}
      matlab:     {module: matlab/R2014a, bash_cmd: null}
      slicer:     {module: slicer/4.4.0, bash_cmd: null}
      minc-toolkit: {module: minc-toolkit/1.0.01, bash_cmd: null}
      mricron:      {module: mricron/0.20140804, bash_cmd: null}
      R:            {module: 'R/3.2.4 R-extras/3.2.4', bash_cmd: null}
      ENIGMA-DTI:   {module: ENIGMA-DTI/2015.01, bash_cmd: null}
      connectome-workbench: {module: connectome-workbench/1.1.1, bash_cmd: null}
      hcp-pipelines: {module: hcp-pipelines/3.7.0, bash_cmd: null}
      datman:        {module: /archive/data-2.0/code/datman.module, bash_cmd: null}
  scc:
    hostname: 'scc.camh.net'
    DATMAN_ASSETSDIR: '/KIMEL/quarantine/datman/latest/src/datman/assets'
    DATMAN_PROJECTSDIR: '/external/rprshnas01/tigrlab/archive/data-2.0'
    XNAT_ARCHIVEDIR: '/external/rprshnas01/tigrlab/xnat/spred/archive'
    PipelineSettings_torun: ['pipelines']
    to_load_quarantine: 'module load /KIMEL/quarantine/modules/quarantine'
    Software:
      AFNI:       {module: AFNI/2016.05.03 , bash_cmd: null}
      freesurfer: {module: freesurfer/5.3.0, bash_cmd: null}
      FSL:        {module: FSL/5.0.9, bash_cmd: null}
      matlab:     {module: MATLAB/R2014b, bash_cmd: null}
      slicer:     {module: slicer/4.5.0, bash_cmd: null}
      minc-toolkit: {module: minc-toolkit/1.0.07, bash_cmd: null}
      mricron:      {module: mricron/30APR2016, bash_cmd: null}
      R:            {module: R/3.2.5, bash_cmd: null}
      ENIGMA-DTI:   {module: ENIGMA-DTI/2015.01, bash_cmd: null}
      connectome-workbench: {module: connectome-workbench/1.1.1 ,bash_cmd: null}
      hcp-pipelines: {module: hcp-pipelines/3.15.1, bash_cmd: null}
      FIX:           {module: FIX/1.061, bash_cmd: null}
      datman:        {module: datman/latest, bash_cmd: null}

## PipelineSettings holds the default workflows (i.e. pipeline) that we want to run
## The first level is the name of the workflow.
## see https://github.com/TIGRLab/admin/wiki/data-organization-and-config-files#pipelinesettings
## for more info
PipelineSettings:
  data:
    - 'sshpass' :
        message: Get new scans
        arguments:
          - '-f ${PROJECTDIR}/metadata/mrftppass.txt'
          - 'sftp'
          - '-qra'
          - '${MRUSER}@mrftp.camhpet.ca:${MRFOLDER}'
          - '${PROJECTDIR}/data/zips'

    - 'link.py' :
        message: Link scans
        arguments:
         - '--lookup=${PROJECTDIR}/metadata/scans.csv'
         - '${PROJECTDIR}/data/dicom/'
         - '${PROJECTDIR}/data/zips/*.zip'

    - 'dm-xnat-upload.sh' :
        message: Uploading new scans to XNAT
        arguments:
          - '${XNAT_PROJECT}'
          - '${XNAT_ARCHIVE_CMH}'
          - '${PROJECTDIR}/data/dicom'
          - '${PROJECTDIR}/metadata/xnat-credentials'

    - 'xnat-extract.py' :
        message: Extract new scans from XNAT
        IterateOverSites : Yes
        arguments:
          - '--blacklist ${PROJECTDIR}/metadata/blacklist.csv'
          - '--datadir ${PROJECTDIR}/data'
          - '--exportinfo ${PROJECTDIR}/metadata/exportinfo.csv'
          - '${XNAT_ARCHIVE_<site>}/*'
        dependancies: [slicer, mricron, minc-toolkit]

    - 'dm-check-headers.py' :
        message: Checking DICOM headers
        IterateOverSites : Yes
        arguments:
          - '--filter <site>'
          - '${<site>_STANDARD}'
          - '${PROJECTDIR}/qc/logs'
          - "${PROJECTDIR}/data/dcm/"

    - 'dm-check-bvecs.py' :
        message: Checking gradient directions
        IterateOverSites : Yes
        arguments:
          - '--filter <site>'
          - '${<site>_STANDARD}'
          - '${PROJECTDIR}/qc/logs'
          - "${PROJECTDIR}/data/nii/"

    - 'dm-link-sprl.sh' :
        message: 'Linking Spiral Scans'
        runif : '"SPRL" in ScanTypes'
        arguments: ['${PROJECTDIR}/data']

    - 'dm-link-vn-sprl.sh' :
        message: 'Linking Spiral VR Scans'
        runif : '"VN-SPRL" in ScanTypes'
        arguments: ['${PROJECTDIR}/data']

    - 'dm-proc-split-pdt2.py' :
        message: 'Split the PDT2 images'
        runif: '"PDT2" in ScanTypes'
        runInsideSubShell : Yes
        arguments: ['${PROJECTDIR}/data/nii/*/*_PDT2_*.nii.gz']
        dependancies: [FSL]

    # - 'dm-reslice.py' :
    #     message: 'Reslicing DTI60 images'
    #     runif: "'DTI60-1000' in ScanTypes"
    #     arguments: [ '${PROJECTDIR}/data/nii/*/*DTI60-1000*.nii.gz' ]
    #     dependancies: [ AFNI ]

    - 'qc-html.py' :
        message: Generating QC documents
        arguments:
          - '--datadir ${PROJECTDIR}/data/'
          - '--qcdir ${PROJECTDIR}/qc'
          - '--project-settings ${PROJECTDIR}/metadata/project_settings.yml'
        dependancies: [AFNI, FSL, matlab]
        runInsideSubShell : Yes
        # qbatch:
        #   - '-c 1'
        #   - '-N qc_${STUDYNAME}_${DATESTAMP}'
        #   - '--logdir ${PROJECTDIR}/logs'

    - 'qc-report.py' :
        arguments: ['${PROJECTDIR}']
        runInsideSubShell : Yes
        # qbatch:
        #   - '--afterok qc_${STUDYNAME}_${DATESTAMP}'
        #   - '-c 1'
        #   - '--logdir ${PROJECTDIR}/logs'

    - 'qc-phantom.py' :
        message: Updating phantom plots
        runif: 'len(SiteNames) > 1'
        dependancies: [AFNI, FSL, matlab]
        arguments:
          - ${PROJECTDIR}
          - '53'
          - '${SITES}'
          - '--adni'
          - '--fmri'
          - '--dti'

    - 'dm-proc-CIVET.py' :
        message: 'Running CIVET'
        runif: "'T1' in ScanTypes"
        arguments:
         - '--QCed-transfer ${PROJECTDIR}/metadata/checklist.csv '
         - '${PROJECTDIR}/data/mnc/'
         - '${PROJECTDIR}/data/civet/'
         - '${PREFIX}'

    - 'scan-date-report.py' : off

  pipelines:

    - 'dm-proc-dtifit.py' :
        message: 'Running dtifit'
        runif: 'any("DTI" in s for s in ScanTypes)'
        arguments:
          - '--inputdir ${PROJECTDIR}/data/nii'
          - '--outputdir ${PROJECTDIR}/pipelines/dtifit'
        dependancies: FSL

    - 'dtifit-qc.py' :
        message: 'Running ditfit qc'
        runif: 'any("DTI" in s for s in ScanTypes)'
        arguments:
          - '${PROJECTDIR}/pipelines/dtifit/'
        dependancies: FSL

    - 'dm-proc-enigmadti.py' :
        message: 'Running enignmaDTI'
        runif: 'any("DTI" in s for s in ScanTypes)'
        arguments:
          - '--calc-all'
          - '--QC-transfer ${PROJECTDIR}/metadata/checklist.csv'
          - '${PROJECTDIR}/pipelines/dtifit'
          - '${PROJECTDIR}/pipelines/enigmaDTI'
        dependancies: [FSL, R, ENIGMA-DTI]

    - 'dm-proc-freesurfer.py' :
        message: 'Running freesurfer'
        runif: "'T1' in ScanTypes"
        arguments:
         - '--QC-transfer ${PROJECTDIR}/metadata/checklist.csv '
         - '${PROJECTDIR}/data/nii/'
         - '${PROJECTDIR}/pipelines/freesurfer/'
        dependancies: [freesurfer, AFNI, datman]
        environment: 'export SUBJECTS_DIR=${PROJECTDIR}/pipelines/freesurfer'

    - 'dm-proc-fs2wb.py' :
        message: "Converting freesurfer to HCP..."
        runif: "'T1' in ScanTypes"
        arguments:
          - '${PROJECTDIR}/pipelines/freesurfer/'
          - '${PROJECTDIR}/pipelines/hcp/'
        dependancies:
          - freesurfer
          - FSL
          - connectome-workbench
          - hcp-pipelines

    # - 'dm-proc-ea.py' :
    #     message: 'Analyzing empathic accuracy data'
    #     runif: "'EMP' in ScanTypes"
    #     arguments:
    #       - '${PROJECTDIR}/data'
    #       - '${PROJECTDIR}/pipelines/freesurfer'
    #       - '${PROJECTDIR}/pipelines/ea'
    #       - '${DATMAN_ASSETSDIR}/150409-compcor-nonlin-8fwhm.sh'
    #       - '${PROJECTDIR}/metadata/design'
    #     dependancies: [freesurfer, AFNI, FSL, matlab]
    #     environment: 'export SUBJECTS_DIR=${PROJECTDIR}/pipelines/freesurfer'
    #
    # - 'dm-proc-imob.py' :
    #     message: 'Analyzing imitate observe data'
    #     runif: "('IMI' in ScanTypes) & ('OBS' in ScanTypes)"
    #     arguments:
    #       - '${PROJECTDIR}/data'
    #       - '${PROJECTDIR}/pipelines/freesurfer'
    #       - '${PROJECTDIR}/pipelines/imob'
    #       - '${DATMAN_ASSETSDIR}/150409-compcor-nonlin-8fwhm.sh'
    #       - '${PROJECTDIR}/metadata/design'
    #     dependancies: [freesurfer, AFNI, FSL, matlab]
    #     environment: 'export SUBJECTS_DIR=${PROJECTDIR}/pipelines/freesurfer'
    #
    # - 'dm-proc-rest.py' :
    #     message: 'Analyzing resting state data'
    #     runif: "'RST' in ScanTypes or 'SPRL' in ScanTypes"
    #     arguments:
    #       - '--tags=RST,SPRL'
    #       - '${PROJECTDIR}/data'
    #       - '${PROJECTDIR}/pipelines/freesurfer'
    #       - '${PROJECTDIR}/pipelines/rest'
    #       - '${DATMAN_ASSETSDIR}/151012-tedmethod-compcor-lowpass-nonlin-10fwhm.sh'
    #       - '${DATMAN_ASSETSDIR}/shen_1mm_268_parcellation.nii.gz'
    #     dependancies: [freesurfer, AFNI, FSL, matlab]
    #     environment: 'export SUBJECTS_DIR=${PROJECTDIR}/pipelines/freesurfer'


ExportSettings:
  T1:         {'nii', 'dcm', 'mnc'}
  PDT2:       {'nii', 'dcm'}
  T2:         {'nii', 'dcm'}
  PD:         {'nii', 'dcm'}
  FLAIR:      {'nii', 'dcm'}
  RST:        {'nii', 'dcm'}
  SPRL:       {'nii'}
  VN-SPRL:    {'nii'}
  OBS:        {'nii', 'dcm'}
  IMI:        {'nii', 'dcm'}
  EMP:        {'nii', 'dcm'}
  NBK:        {'nii', 'dcm'}
  DTI60-1000: {'nii', 'dcm', 'nrrd'}
  DTI60-29-1000: {'nii', 'dcm', 'nrrd'}
  DTI60-20-1000: {'nii', 'dcm', 'nrrd'}
  DTI33-4500: {'nii', 'dcm', 'nrrd'}
  DTI33-3000: {'nii', 'dcm', 'nrrd'}
  DTI33-1000: {'nii', 'dcm', 'nrrd'}
  FMAP-6.5:   {'nii', 'dcm'}
  FMAP-8.5:   {'nii', 'dcm'}
  FMAP:       {'nii', 'dcm'}
  MRS-DLPFC:  {'nii', 'dcm'}
  MRS-sgACC:  {'nii', 'dcm'}
